использован класс Stack из прошлых домашних заданий - выполняет проверку на правильность расстановки скобок

структура Borders: 
	-содержит границы бинарного выражения и само выражение

функции:
 
	-string binaryCalculation(string expr) 
		- принимает выражения вида "a+b" в виде строки. Возвращает результат вычисления в виде строки.

	-inline bool isHook/Symbol(int i, string expr)
		- определяет является ли элемент массива i скобкой/символом.
		
	- int 	findNextHook,
		findPrevHook,
		findNextSympol,
		findPrevSymbol (int pos, string expr)
		- (см. название функции) ищет следующую/предыдущюю скобку/символ начинаю с индекса pos, если не находит возвращает -1.

	- int findPrimaryExpression(string expr)
		- проверяет выражение на наличие операций умножить и разделить, для их приоритетного выполнения

	- Borders findBinaryExpression(string expr)
		- находит и возвращяет положение, и само бинарное выражение, которое можно вычислить в данный момент

	- void replaceBinaryExpression(string *expr, Borders binary)
		- заменяет в указанной строке, заданное бинарное выражение на его результат и удаляет ненужные скобки


	int calculate(string expr)
		- конечная функция, выполняет проверку на правильность расстановки скобок. Вызывает функцию replaceBinaryExpression() и рекурсивно вызывает себя до тех пор, пока строка не примет вид бинарного выражения. Потом вычисляет его и возвращяет итоговый результат.